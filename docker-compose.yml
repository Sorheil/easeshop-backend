services:
    easeshop_db:
        image: postgres:17.2
        container_name: easeshop_db
        environment:
            POSTGRES_DB: ${SPRING_DB}
            POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
            POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
        volumes:
            - easeshop_db:/var/lib/postgresql/data
        restart: always
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${SPRING_DATASOURCE_USERNAME}"]
            interval: 30s
            timeout: 10s
            retries: 3
        networks:
            - easeshop_backend_network

    easeshop:
        #build: ./easeshop
        image: sorheil/easeshop-backend:0.0.0
        container_name: easeshop_app
        environment:
            # profile
            SPRING_PROFILES_ACTIVE: prod

            #database
            SPRING_DATASOURCE_URL: jdbc:postgresql://easeshop_db:5432/${SPRING_DB}
            SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
            SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}

            # cinetpay
            CINETPAY_API_KEY: ${CINETPAY_API_KEY}
            CINETPAY_SITE_ID: ${CINETPAY_SITE_ID}

            #cors
            CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}

            #mail
            MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS}
            MAIL_USERNAME: ${MAIL_USERNAME}
            MAIL_PASSWORD: ${MAIL_PASSWORD}

            #jwt
            JWT_SECRET: ${JWT_SECRET}

        ports:
            - "8081:8081"
        depends_on:
            easeshop_db:
                condition: service_healthy
        restart: always
        networks:
            - easeshop_backend_network

    certbot:
        image: certbot/certbot
        container_name: certbot
        volumes:
            - /etc/letsencrypt:/etc/letsencrypt
            - /var/www/certbot:/var/www/certbot
        command: certonly --webroot -w /var/www/certbot --keep-until-expiring --email ${CERTBOT_EMAIL} -d ${CERTBOT_DOMAIN} --agree-tos

    watchtower:
        image: containrrr/watchtower
        container_name: watchtower
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
            - WATCHTOWER_CLEANUP=true
            - DOCKER_HUB_USERNAME=${DOCKER_HUB_USERNAME}
            - DOCKER_HUB_PASSWORD=${DOCKER_HUB_ACCESS_TOKEN}
        command: --interval 300 # Checks for updates every 5 minutes

volumes:
    easeshop_db:
    certbot-ssl:
    certbot-challenge:

networks:
    easeshop_backend_network:
        driver: bridge
